HTML

<body>
<label class="name" for="input1">Ширина</label><br>
<input class ="input1" type="number" placeholder="Введите любое число">
<label class="name" for="input2">Высота</label><br>
<input class ="input2" type="number" placeholder="Введите любое число">
<button type="submit" class="button">Запрос</button>
<div class="result"></div>
</body>
_____________________________________

CSS

body {
    display: flex;
    flex-direction: column;
    background-color:#9ACD32;
    align-items: center;
}
.name{
  font-weight: 400;
  font-size: 20px;
  line-height: 30px;  
  color: #000080; 
  text-align: center;
}
input {
  display: block;
  padding: 10px 10px;
  border-radius: 5px;
}

.input::placeholder {
    color: #C0C0C0;   
  }

button {
  margin: 20px 0;
  display: block;
  text-transform: uppercase;
  color: #FFFFFF;
  padding: 15px 65px; 
  background-color:#4682B4;
  border: 0px;
  border-radius: 5px;
  cursor: pointer;
  } 
button:hover {
  background: #00CED1;
}

______________________________________

JS

 const btnNode = document.querySelector('button');
 const resultNode = document.querySelector('.result');
     btnNode.addEventListener('click', () => {
      const value1 = +document.querySelector('.input1').value;
      const value2 = +document.querySelector('.input2').value;
       if (value1 >= 100 && value1 <= 300 && value2 >= 100 && value2 <= 300) {
       let url = `https://picsum.photos/${value1}/${value2}`;
       useRequest(url);
    }
    else {
        const error = `<p>Oдно из чисел вне диапазона от 100 до 300</p>`;
        resultNode.innerHTML = error;
    }
});
 function useRequest(url) {
  console.log(url);
    fetch(url)
    .then((response) => {
        console.log('response', response);
            resultUrl = response.url;
            console.log(resultUrl)
            let cards = '';
                const cardBlock = `
            <img
                src="${resultUrl}">
            `;
            cards += cardBlock

            resultNode.innerHTML = cards;
        })

        .catch(() => {console.log('error') });
    };